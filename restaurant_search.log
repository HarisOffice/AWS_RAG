2024-12-17 18:11:20,786 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:11:20,790 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:11:21,593 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:11:21,597 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:11:22,330 - WARNING -  * Debugger is active!
2024-12-17 18:11:22,348 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:12:07,206 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani ki achi dukaanay karachi mai"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:12:07,227 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani ki achi dukaanay karachi mai"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:12:07,349 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:12:07,350 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:12:07,682 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024A594C8520>
2024-12-17 18:12:07,683 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024A592D8FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:12:07,773 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024A594C84F0>
2024-12-17 18:12:07,774 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:12:07,776 - DEBUG - send_request_headers.complete
2024-12-17 18:12:07,777 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:12:07,779 - DEBUG - send_request_body.complete
2024-12-17 18:12:07,781 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:12:08,131 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:12:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3729badc105f5d-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29889'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'222ms'), (b'x-request-id', b'req_01jfabyma3fw59ttyewnh08kdk'), (b'Set-Cookie', b'__cf_bm=OUynVGXGYwmlmPLZoZirK3rXZLfQpjhq7sxIyVgk8Z8-1734441128-1.0.1.1-m6259r9GoUHFuL7.FiRlCdrqU6_50iPXJTOae21UZs_RGnW11qIEydi1oxqzZk2CyrAnoO9GWhc5bGV2fv.kUA; path=/; expires=Tue, 17-Dec-24 13:42:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:12:08,137 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:12:08,138 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:12:08,139 - DEBUG - receive_response_body.complete
2024-12-17 18:12:08,140 - DEBUG - response_closed.started
2024-12-17 18:12:08,141 - DEBUG - response_closed.complete
2024-12-17 18:12:08,142 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:12:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3729badc105f5d-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29889', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '222ms', 'x-request-id': 'req_01jfabyma3fw59ttyewnh08kdk', 'set-cookie': '__cf_bm=OUynVGXGYwmlmPLZoZirK3rXZLfQpjhq7sxIyVgk8Z8-1734441128-1.0.1.1-m6259r9GoUHFuL7.FiRlCdrqU6_50iPXJTOae21UZs_RGnW11qIEydi1oxqzZk2CyrAnoO9GWhc5bGV2fv.kUA; path=/; expires=Tue, 17-Dec-24 13:42:08 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:12:08,175 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Karachi",\n  "language": "Urdu"\n}'
2024-12-17 18:12:08,177 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:12:08,179 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Karachi', 'language': 'Urdu'}
2024-12-17 18:12:08,211 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:12:08,226 - DEBUG - Query params: ('%Desi%', 'Desi', '%Karachi%', '%Karachi%', 'Karachi')
2024-12-17 18:12:08,380 - ERROR - Database connection error: no such table: restaurants
2024-12-17 18:12:08,601 - ERROR - Database query error: no such table: restaurants
2024-12-17 18:12:08,651 - INFO - 127.0.0.1 - - [17/Dec/2024 18:12:08] "[35m[1mPOST /search HTTP/1.1[0m" 500 -
2024-12-17 18:13:03,222 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:13:03,228 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:13:32,276 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:13:32,279 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:13:32,999 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:13:33,001 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:13:33,689 - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.100.118:5000
2024-12-17 18:13:33,691 - INFO - [33mPress CTRL+C to quit[0m
2024-12-17 18:13:33,723 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:13:39,439 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:13:39,443 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:13:40,198 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:13:40,202 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:13:41,168 - WARNING -  * Debugger is active!
2024-12-17 18:13:41,201 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:13:43,696 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani ki achi dukaanay karachi mai"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:13:43,712 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani ki achi dukaanay karachi mai"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:13:43,826 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:13:43,827 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:13:43,924 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B44C0>
2024-12-17 18:13:43,925 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:13:44,020 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B4490>
2024-12-17 18:13:44,022 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:13:44,024 - DEBUG - send_request_headers.complete
2024-12-17 18:13:44,025 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:13:44,026 - DEBUG - send_request_body.complete
2024-12-17 18:13:44,027 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:13:44,372 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:13:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f372c146dfa3e35-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29889'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'222ms'), (b'x-request-id', b'req_01jfac1j9tfqatt7ebmqmwpmk7'), (b'Set-Cookie', b'__cf_bm=.YPNxAQOFv1heZLIZeKtE_jUGVTJh1J2XHtvOGgXxqE-1734441224-1.0.1.1-ZPWpFOw94G6uOnzTxxzgvJh3qGjQIDyRM7HGvXPi5VtSUtSNtui8I_34EFf7gxuEkaW0_fpgyLZyX4ffh0RchQ; path=/; expires=Tue, 17-Dec-24 13:43:44 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:13:44,376 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:13:44,377 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:13:44,378 - DEBUG - receive_response_body.complete
2024-12-17 18:13:44,379 - DEBUG - response_closed.started
2024-12-17 18:13:44,380 - DEBUG - response_closed.complete
2024-12-17 18:13:44,381 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:13:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f372c146dfa3e35-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29889', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '222ms', 'x-request-id': 'req_01jfac1j9tfqatt7ebmqmwpmk7', 'set-cookie': '__cf_bm=.YPNxAQOFv1heZLIZeKtE_jUGVTJh1J2XHtvOGgXxqE-1734441224-1.0.1.1-ZPWpFOw94G6uOnzTxxzgvJh3qGjQIDyRM7HGvXPi5VtSUtSNtui8I_34EFf7gxuEkaW0_fpgyLZyX4ffh0RchQ; path=/; expires=Tue, 17-Dec-24 13:43:44 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:13:44,412 - DEBUG - Raw Groq response: '{\n    "cuisine": "Desi",\n    "location": "Karachi",\n    "language": "Urdu"\n}'
2024-12-17 18:13:44,414 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Karachi', 'language': 'Urdu'}
2024-12-17 18:13:44,421 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:13:44,424 - DEBUG - Query params: ('%Desi%', 'Desi', '%Karachi%', '%Karachi%', 'Karachi')
2024-12-17 18:13:44,427 - INFO - 127.0.0.1 - - [17/Dec/2024 18:13:44] "POST /search HTTP/1.1" 200 -
2024-12-17 18:17:48,027 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani ki achi dukaanay clifton ke aas pas"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:17:48,035 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani ki achi dukaanay clifton ke aas pas"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:17:48,038 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:17:48,044 - DEBUG - close.started
2024-12-17 18:17:48,045 - DEBUG - close.complete
2024-12-17 18:17:48,047 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:17:48,167 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531600>
2024-12-17 18:17:48,169 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:17:48,254 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531630>
2024-12-17 18:17:48,256 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:17:48,258 - DEBUG - send_request_headers.complete
2024-12-17 18:17:48,260 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:17:48,262 - DEBUG - send_request_body.complete
2024-12-17 18:17:48,263 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:17:48,819 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:17:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37320aeb1cf876-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29887'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'226ms'), (b'x-request-id', b'req_01jfac90t0ever3bd3jqyq82mw'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:17:48,821 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:17:48,822 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:17:48,824 - DEBUG - receive_response_body.complete
2024-12-17 18:17:48,828 - DEBUG - response_closed.started
2024-12-17 18:17:48,830 - DEBUG - response_closed.complete
2024-12-17 18:17:48,831 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:17:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37320aeb1cf876-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29887', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '226ms', 'x-request-id': 'req_01jfac90t0ever3bd3jqyq82mw', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:17:48,835 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Clifton",\n  "language": "Urdu"\n}'
2024-12-17 18:17:48,836 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:17:48,837 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'Urdu'}
2024-12-17 18:17:48,839 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:17:48,843 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:17:48,847 - INFO - 127.0.0.1 - - [17/Dec/2024 18:17:48] "POST /search HTTP/1.1" 200 -
2024-12-17 18:31:11,799 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurant near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:31:11,808 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurant near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:31:11,816 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:31:11,818 - DEBUG - close.started
2024-12-17 18:31:11,820 - DEBUG - close.complete
2024-12-17 18:31:11,821 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:31:11,912 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531E70>
2024-12-17 18:31:11,916 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:31:12,005 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531EA0>
2024-12-17 18:31:12,007 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:31:12,008 - DEBUG - send_request_headers.complete
2024-12-17 18:31:12,009 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:31:12,010 - DEBUG - send_request_body.complete
2024-12-17 18:31:12,011 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:31:12,582 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:31:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3745aa8bc93ddc-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29889'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'222ms'), (b'x-request-id', b'req_01jfad1hr7fwyah57txt10h8sm'), (b'Set-Cookie', b'__cf_bm=pUs3FAdyrVarSG387NPkoDLbLwUvGSv1hfK1_3.A.qQ-1734442272-1.0.1.1-l2AztDpO2VBz1GWEk8N6teNFbepR6sBaeOz5LgKx9qUYzDqZ3J817ZSyN8nxJksmvdWdoi6AUW0w7xtXNVAB4g; path=/; expires=Tue, 17-Dec-24 14:01:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:31:12,586 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:31:12,588 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:31:12,590 - DEBUG - receive_response_body.complete
2024-12-17 18:31:12,591 - DEBUG - response_closed.started
2024-12-17 18:31:12,592 - DEBUG - response_closed.complete
2024-12-17 18:31:12,593 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:31:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3745aa8bc93ddc-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29889', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '222ms', 'x-request-id': 'req_01jfad1hr7fwyah57txt10h8sm', 'set-cookie': '__cf_bm=pUs3FAdyrVarSG387NPkoDLbLwUvGSv1hfK1_3.A.qQ-1734442272-1.0.1.1-l2AztDpO2VBz1GWEk8N6teNFbepR6sBaeOz5LgKx9qUYzDqZ3J817ZSyN8nxJksmvdWdoi6AUW0w7xtXNVAB4g; path=/; expires=Tue, 17-Dec-24 14:01:12 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:31:12,601 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Indian",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:31:12,602 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:31:12,603 - INFO - Parsed Query: {'cuisine': 'Indian', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:31:12,605 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:31:12,607 - DEBUG - Query params: ('%Indian%', 'Indian', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:31:12,609 - INFO - 127.0.0.1 - - [17/Dec/2024 18:31:12] "POST /search HTTP/1.1" 200 -
2024-12-17 18:32:01,471 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani ki achi dukaanay clifton ke aas pas"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:32:01,541 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani ki achi dukaanay clifton ke aas pas"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:32:01,618 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:32:01,683 - DEBUG - close.started
2024-12-17 18:32:01,702 - DEBUG - close.complete
2024-12-17 18:32:01,736 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:32:01,826 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B59F0>
2024-12-17 18:32:01,829 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:32:01,917 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B5690>
2024-12-17 18:32:01,919 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:32:01,920 - DEBUG - send_request_headers.complete
2024-12-17 18:32:01,921 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:32:01,924 - DEBUG - send_request_body.complete
2024-12-17 18:32:01,926 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:32:02,290 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:32:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3746e27cdc5fcf-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29887'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'226ms'), (b'x-request-id', b'req_01jfad32gmehgbrvdwrxmrezhf'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:32:02,294 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:32:02,296 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:32:02,297 - DEBUG - receive_response_body.complete
2024-12-17 18:32:02,298 - DEBUG - response_closed.started
2024-12-17 18:32:02,299 - DEBUG - response_closed.complete
2024-12-17 18:32:02,300 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:32:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3746e27cdc5fcf-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29887', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '226ms', 'x-request-id': 'req_01jfad32gmehgbrvdwrxmrezhf', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:32:02,307 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "Urdu"\n}'
2024-12-17 18:32:02,311 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:32:02,312 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'Urdu'}
2024-12-17 18:32:02,315 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:32:02,319 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:32:02,321 - INFO - 127.0.0.1 - - [17/Dec/2024 18:32:02] "POST /search HTTP/1.1" 200 -
2024-12-17 18:34:02,305 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "query IntrospectionQuery {
      __schema {
        
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
      
      
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:34:02,335 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:34:02,341 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:34:02,343 - DEBUG - close.started
2024-12-17 18:34:02,345 - DEBUG - close.complete
2024-12-17 18:34:02,370 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:34:02,507 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "query IntrospectionQuery {
      __schema {
        
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          description
          
          locations
          args {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      description
      
      fields(includeDeprecated: true) {
        name
        description
        args {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        description
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      description
      type { ...TypeRef }
      defaultValue
      
      
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:34:02,539 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:34:02,545 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:34:02,546 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:34:02,703 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531AB0>
2024-12-17 18:34:02,703 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF530CD0>
2024-12-17 18:34:02,704 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:34:02,705 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:34:02,792 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF2BF310>
2024-12-17 18:34:02,793 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:34:02,794 - DEBUG - send_request_headers.complete
2024-12-17 18:34:02,795 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:34:02,795 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF531000>
2024-12-17 18:34:02,796 - DEBUG - send_request_body.complete
2024-12-17 18:34:02,797 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:34:02,798 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:34:02,800 - DEBUG - send_request_headers.complete
2024-12-17 18:34:02,801 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:34:02,803 - DEBUG - send_request_body.complete
2024-12-17 18:34:02,803 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:34:03,237 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:34:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3749d5fa28ef71-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29484'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.032s'), (b'x-request-id', b'req_01jfad6rh6edy906ntypev06dw'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:34:03,239 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:34:03,241 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:34:03,242 - DEBUG - receive_response_body.complete
2024-12-17 18:34:03,243 - DEBUG - response_closed.started
2024-12-17 18:34:03,244 - DEBUG - response_closed.complete
2024-12-17 18:34:03,245 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:34:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3749d5fa28ef71-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29484', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.032s', 'x-request-id': 'req_01jfad6rh6edy906ntypev06dw', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:34:03,252 - DEBUG - Raw Groq response: 'After parsing the query, I found the relevant information. Here is the JSON output:\n\n```\n{\n  "cuisine": null,\n  "location": null,\n  "language": null\n}\n```\n\nNote that the query is a schema definition query, and it doesn\'t contain any specific information about a Desi restaurant. The query is used to introspect the schema of a GraphQL API, and it doesn\'t provide any data about a specific restaurant. Therefore, the output is empty with null values for all keys.'
2024-12-17 18:34:03,253 - INFO - Parsed Query: {'cuisine': None, 'location': None, 'language': None}
2024-12-17 18:34:03,255 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:34:03,258 - DEBUG - Query params: ('%None%', None, '%%', '%%', '')
2024-12-17 18:34:03,261 - INFO - 127.0.0.1 - - [17/Dec/2024 18:34:03] "POST /search HTTP/1.1" 200 -
2024-12-17 18:34:03,279 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:34:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3749d5ebc73e61-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'29484'), (b'x-ratelimit-reset-requests', b'11.991999999s'), (b'x-ratelimit-reset-tokens', b'1.032s'), (b'x-request-id', b'req_01jfad6rhgf0pv883dseb1kyx2'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:34:03,283 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:34:03,284 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:34:03,286 - DEBUG - receive_response_body.complete
2024-12-17 18:34:03,287 - DEBUG - response_closed.started
2024-12-17 18:34:03,288 - DEBUG - response_closed.complete
2024-12-17 18:34:03,289 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:34:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3749d5ebc73e61-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '29484', 'x-ratelimit-reset-requests': '11.991999999s', 'x-ratelimit-reset-tokens': '1.032s', 'x-request-id': 'req_01jfad6rhgf0pv883dseb1kyx2', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:34:03,293 - DEBUG - Raw Groq response: 'After parsing the query, I found the following relevant information:\n\n```\n{\n  "cuisine": "Indian",\n  "location": "Bangalore",\n  "language": "Hindi"\n}\n```\n\nNote that the query does not contain any specific location or cuisine information, so I used NULL as per your instructions.'
2024-12-17 18:34:03,297 - INFO - Parsed Query: {'cuisine': 'Indian', 'location': 'Bangalore', 'language': 'Hindi'}
2024-12-17 18:34:03,299 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:34:03,302 - DEBUG - Query params: ('%Indian%', 'Indian', '%Bangalore%', '%Bangalore%', 'Bangalore')
2024-12-17 18:34:03,305 - INFO - 127.0.0.1 - - [17/Dec/2024 18:34:03] "POST /search HTTP/1.1" 200 -
2024-12-17 18:36:01,942 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurant near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:36:01,952 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurant near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:36:01,958 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:36:01,960 - DEBUG - close.started
2024-12-17 18:36:01,962 - DEBUG - close.complete
2024-12-17 18:36:01,964 - DEBUG - close.started
2024-12-17 18:36:01,966 - DEBUG - close.complete
2024-12-17 18:36:01,968 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:36:02,054 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B5B70>
2024-12-17 18:36:02,056 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:36:02,147 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF4B5630>
2024-12-17 18:36:02,150 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:36:02,152 - DEBUG - send_request_headers.complete
2024-12-17 18:36:02,153 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:36:02,154 - DEBUG - send_request_body.complete
2024-12-17 18:36:02,155 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:36:02,592 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:36:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f374cbffce244ab-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29889'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'222ms'), (b'x-request-id', b'req_01jfadad4bejwrvq8n6767x9eb'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:36:02,597 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:36:02,598 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:36:02,600 - DEBUG - receive_response_body.complete
2024-12-17 18:36:02,601 - DEBUG - response_closed.started
2024-12-17 18:36:02,603 - DEBUG - response_closed.complete
2024-12-17 18:36:02,605 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:36:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f374cbffce244ab-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29889', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '222ms', 'x-request-id': 'req_01jfadad4bejwrvq8n6767x9eb', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:36:02,615 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:36:02,619 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:36:02,621 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:36:02,625 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:36:02,632 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:36:02,636 - INFO - 127.0.0.1 - - [17/Dec/2024 18:36:02] "POST /search HTTP/1.1" 200 -
2024-12-17 18:36:11,534 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:36:11,547 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:36:11,550 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:36:11,552 - DEBUG - close.started
2024-12-17 18:36:11,554 - DEBUG - close.complete
2024-12-17 18:36:11,555 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:36:11,640 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF5319F0>
2024-12-17 18:36:11,642 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000230EF2C4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:36:11,729 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000230EF530040>
2024-12-17 18:36:11,730 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:36:11,732 - DEBUG - send_request_headers.complete
2024-12-17 18:36:11,734 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:36:11,735 - DEBUG - send_request_body.complete
2024-12-17 18:36:11,737 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:36:12,089 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:36:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f374cfbdd2744a8-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadapezeehav7e8b3dnmg4k'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:36:12,092 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:36:12,093 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:36:12,094 - DEBUG - receive_response_body.complete
2024-12-17 18:36:12,095 - DEBUG - response_closed.started
2024-12-17 18:36:12,096 - DEBUG - response_closed.complete
2024-12-17 18:36:12,098 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:36:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f374cfbdd2744a8-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadapezeehav7e8b3dnmg4k', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:36:12,102 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:36:12,103 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:36:12,104 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:36:12,105 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:36:12,110 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:36:12,113 - INFO - 127.0.0.1 - - [17/Dec/2024 18:36:12] "POST /search HTTP/1.1" 200 -
2024-12-17 18:37:59,953 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:38:00,000 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:38:00,040 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:38:00,888 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:39:22,846 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:39:22,850 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:39:23,578 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:39:23,581 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:39:24,472 - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.100.118:5000
2024-12-17 18:39:24,479 - INFO - [33mPress CTRL+C to quit[0m
2024-12-17 18:39:24,531 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:39:31,510 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:39:31,512 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:39:32,303 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:39:32,306 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:39:33,030 - WARNING -  * Debugger is active!
2024-12-17 18:39:33,057 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:40:59,549 - INFO -  * Detected change in 'C:\\Users\\as\\anaconda3\\envs\\RAG\\Lib\\logging\\__init__.py', reloading
2024-12-17 18:41:00,864 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:41:06,797 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:41:06,800 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:41:07,390 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:41:07,392 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:41:08,056 - WARNING -  * Debugger is active!
2024-12-17 18:41:08,072 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:43:31,415 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton with an rating over 4.5"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:31,432 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton with an rating over 4.5"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:31,653 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:31,654 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:43:31,742 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BC84580>
2024-12-17 18:43:31,744 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001878BAB4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:43:31,834 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BC27E50>
2024-12-17 18:43:31,835 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:31,837 - DEBUG - send_request_headers.complete
2024-12-17 18:43:31,838 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:31,839 - DEBUG - send_request_body.complete
2024-12-17 18:43:31,840 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:32,223 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3757ba8b4d44b7-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29882'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'236ms'), (b'x-request-id', b'req_01jfadr49de5f9cewk8c32jd7x'), (b'Set-Cookie', b'__cf_bm=.IxFz8pwgl_NMBvfKT99APJLEJ3Fw9JAINKodXnX.OY-1734443012-1.0.1.1-cSzZmnseOM40xVymRiKEoFcwyGKsYvBY4SEtOa3JjJbKNsV3g0dwde5TWemlx9peHnc8vvEsW8gkBhX7.iLa6g; path=/; expires=Tue, 17-Dec-24 14:13:32 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:32,228 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:32,229 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:32,232 - DEBUG - receive_response_body.complete
2024-12-17 18:43:32,235 - DEBUG - response_closed.started
2024-12-17 18:43:32,236 - DEBUG - response_closed.complete
2024-12-17 18:43:32,238 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3757ba8b4d44b7-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '29882', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '236ms', 'x-request-id': 'req_01jfadr49de5f9cewk8c32jd7x', 'set-cookie': '__cf_bm=.IxFz8pwgl_NMBvfKT99APJLEJ3Fw9JAINKodXnX.OY-1734443012-1.0.1.1-cSzZmnseOM40xVymRiKEoFcwyGKsYvBY4SEtOa3JjJbKNsV3g0dwde5TWemlx9peHnc8vvEsW8gkBhX7.iLa6g; path=/; expires=Tue, 17-Dec-24 14:13:32 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:32,290 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Indian",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:43:32,292 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:32,294 - INFO - Parsed Query: {'cuisine': 'Indian', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:32,302 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:32,306 - DEBUG - Query params: ('%Indian%', 'Indian', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:32,311 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:32] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:37,432 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton with an rating over 4.1"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:37,447 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton with an rating over 4.1"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:37,454 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:37,457 - DEBUG - close.started
2024-12-17 18:43:37,463 - DEBUG - close.complete
2024-12-17 18:43:37,466 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:43:37,550 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BD1C040>
2024-12-17 18:43:37,553 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001878BAB4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:43:37,641 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BC87B80>
2024-12-17 18:43:37,645 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:37,646 - DEBUG - send_request_headers.complete
2024-12-17 18:43:37,647 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:37,649 - DEBUG - send_request_body.complete
2024-12-17 18:43:37,650 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:37,997 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3757dedf483e13-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'29882'), (b'x-ratelimit-reset-requests', b'6.217s'), (b'x-ratelimit-reset-tokens', b'236ms'), (b'x-request-id', b'req_01jfadr9y5eh2raj0d7fspbx0q'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:38,000 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:38,000 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:38,001 - DEBUG - receive_response_body.complete
2024-12-17 18:43:38,002 - DEBUG - response_closed.started
2024-12-17 18:43:38,003 - DEBUG - response_closed.complete
2024-12-17 18:43:38,004 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3757dedf483e13-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '29882', 'x-ratelimit-reset-requests': '6.217s', 'x-ratelimit-reset-tokens': '236ms', 'x-request-id': 'req_01jfadr9y5eh2raj0d7fspbx0q', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:38,008 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Indian",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:43:38,012 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:38,013 - INFO - Parsed Query: {'cuisine': 'Indian', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:38,016 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:38,019 - DEBUG - Query params: ('%Indian%', 'Indian', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:38,022 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:38] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:40,429 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton with an rating over 4.1"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:40,438 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton with an rating over 4.1"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:40,442 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:40,443 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:40,446 - DEBUG - send_request_headers.complete
2024-12-17 18:43:40,449 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:40,451 - DEBUG - send_request_body.complete
2024-12-17 18:43:40,462 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:40,801 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3757f05cbf3e13-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'29882'), (b'x-ratelimit-reset-requests', b'15.194999999s'), (b'x-ratelimit-reset-tokens', b'236ms'), (b'x-request-id', b'req_01jfadrcnrf3r95rxx0jjj9e6j'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:40,806 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:40,808 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:40,811 - DEBUG - receive_response_body.complete
2024-12-17 18:43:40,812 - DEBUG - response_closed.started
2024-12-17 18:43:40,813 - DEBUG - response_closed.complete
2024-12-17 18:43:40,814 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3757f05cbf3e13-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '29882', 'x-ratelimit-reset-requests': '15.194999999s', 'x-ratelimit-reset-tokens': '236ms', 'x-request-id': 'req_01jfadrcnrf3r95rxx0jjj9e6j', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:40,825 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Indian",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:43:40,826 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:40,827 - INFO - Parsed Query: {'cuisine': 'Indian', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:40,829 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:40,832 - DEBUG - Query params: ('%Indian%', 'Indian', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:40,838 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:40] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:45,143 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton with an rating over 4"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:45,152 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton with an rating over 4"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:45,159 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:45,164 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:45,166 - DEBUG - send_request_headers.complete
2024-12-17 18:43:45,167 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:45,168 - DEBUG - send_request_body.complete
2024-12-17 18:43:45,169 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:45,553 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37580de8533e13-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'29883'), (b'x-ratelimit-reset-requests', b'19.292s'), (b'x-ratelimit-reset-tokens', b'234ms'), (b'x-request-id', b'req_01jfadrh8yegarnkc8jw7dvc7y'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:45,557 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:45,559 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:45,561 - DEBUG - receive_response_body.complete
2024-12-17 18:43:45,562 - DEBUG - response_closed.started
2024-12-17 18:43:45,564 - DEBUG - response_closed.complete
2024-12-17 18:43:45,566 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37580de8533e13-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '29883', 'x-ratelimit-reset-requests': '19.292s', 'x-ratelimit-reset-tokens': '234ms', 'x-request-id': 'req_01jfadrh8yegarnkc8jw7dvc7y', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:45,571 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:43:45,577 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:45,579 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:45,582 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:45,585 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:45,588 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:45] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:49,018 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:49,027 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:49,036 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:49,038 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:49,039 - DEBUG - send_request_headers.complete
2024-12-17 18:43:49,042 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:49,046 - DEBUG - send_request_body.complete
2024-12-17 18:43:49,086 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:49,400 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3758261c573e13-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'26.123999999s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadrn23e6ntah24rmn0akcw'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:49,403 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:49,405 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:49,407 - DEBUG - receive_response_body.complete
2024-12-17 18:43:49,409 - DEBUG - response_closed.started
2024-12-17 18:43:49,410 - DEBUG - response_closed.complete
2024-12-17 18:43:49,411 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3758261c573e13-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14395', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '26.123999999s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadrn23e6ntah24rmn0akcw', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:49,418 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:43:49,420 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:49,421 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:49,424 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:49,427 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:49,431 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:49] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:51,449 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:51,457 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:51,461 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:51,463 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:51,464 - DEBUG - send_request_headers.complete
2024-12-17 18:43:51,465 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:51,466 - DEBUG - send_request_body.complete
2024-12-17 18:43:51,467 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:51,824 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3758354e013e13-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'33.567999999s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadrqe4f3tsqa9sv60vdxh4'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:51,827 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:51,829 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:51,830 - DEBUG - receive_response_body.complete
2024-12-17 18:43:51,831 - DEBUG - response_closed.started
2024-12-17 18:43:51,832 - DEBUG - response_closed.complete
2024-12-17 18:43:51,833 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3758354e013e13-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14394', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '33.567999999s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadrqe4f3tsqa9sv60vdxh4', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:51,839 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:43:51,841 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:51,843 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:51,845 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:51,847 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:51,850 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:51] "POST /search HTTP/1.1" 200 -
2024-12-17 18:43:57,276 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:43:57,291 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:43:57,301 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:43:57,306 - DEBUG - close.started
2024-12-17 18:43:57,324 - DEBUG - close.complete
2024-12-17 18:43:57,326 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:43:57,407 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BD1C040>
2024-12-17 18:43:57,408 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001878BAB4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:43:57,500 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BD1C910>
2024-12-17 18:43:57,501 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:43:57,502 - DEBUG - send_request_headers.complete
2024-12-17 18:43:57,503 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:43:57,504 - DEBUG - send_request_body.complete
2024-12-17 18:43:57,505 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:43:57,864 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:43:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37585afac65fab-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'35.955s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadrxb2e0tv5r80zmfveyxc'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:43:57,868 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:43:57,869 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:43:57,870 - DEBUG - receive_response_body.complete
2024-12-17 18:43:57,871 - DEBUG - response_closed.started
2024-12-17 18:43:57,872 - DEBUG - response_closed.complete
2024-12-17 18:43:57,873 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:43:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37585afac65fab-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14394', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '35.955s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadrxb2e0tv5r80zmfveyxc', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:43:57,878 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:43:57,878 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:43:57,882 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:43:57,884 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:43:57,885 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:43:57,888 - INFO - 127.0.0.1 - - [17/Dec/2024 18:43:57] "POST /search HTTP/1.1" 200 -
2024-12-17 18:44:00,532 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:44:00,541 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:44:00,544 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:44:00,547 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:44:00,550 - DEBUG - send_request_headers.complete
2024-12-17 18:44:00,551 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:44:00,554 - DEBUG - send_request_body.complete
2024-12-17 18:44:00,556 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:44:00,901 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:44:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37586e09ae5fab-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'38.97s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfads09setfva3gevy46z6az'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:44:00,927 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:44:00,929 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:44:00,932 - DEBUG - receive_response_body.complete
2024-12-17 18:44:00,934 - DEBUG - response_closed.started
2024-12-17 18:44:00,940 - DEBUG - response_closed.complete
2024-12-17 18:44:00,943 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:44:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37586e09ae5fab-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14393', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '38.97s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfads09setfva3gevy46z6az', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:44:00,955 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:44:00,957 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:44:00,958 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:44:00,961 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:44:00,980 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:44:00,990 - INFO - 127.0.0.1 - - [17/Dec/2024 18:44:00] "POST /search HTTP/1.1" 200 -
2024-12-17 18:44:31,385 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:44:31,395 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:44:31,398 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:44:31,400 - DEBUG - close.started
2024-12-17 18:44:31,401 - DEBUG - close.complete
2024-12-17 18:44:31,402 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:44:31,488 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BC25ED0>
2024-12-17 18:44:31,489 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001878BAB4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:44:31,579 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BC879D0>
2024-12-17 18:44:31,581 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:44:31,582 - DEBUG - send_request_headers.complete
2024-12-17 18:44:31,582 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:44:31,584 - DEBUG - send_request_body.complete
2024-12-17 18:44:31,585 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:44:31,972 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:44:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37592fffa2ab62-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'16.932s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadsympe6tbxbs9fqh27djq'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:44:31,973 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:44:31,974 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:44:31,975 - DEBUG - receive_response_body.complete
2024-12-17 18:44:31,976 - DEBUG - response_closed.started
2024-12-17 18:44:31,978 - DEBUG - response_closed.complete
2024-12-17 18:44:31,979 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:44:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37592fffa2ab62-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '16.932s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadsympe6tbxbs9fqh27djq', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:44:31,982 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n  "cuisine": "Desi",\n  "location": "Clifton",\n  "language": "English"\n}'
2024-12-17 18:44:31,984 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:44:31,985 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:44:31,987 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:44:31,989 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:44:31,991 - INFO - 127.0.0.1 - - [17/Dec/2024 18:44:31] "POST /search HTTP/1.1" 200 -
2024-12-17 18:44:38,534 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:44:38,541 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama3-8b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:44:38,545 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:44:38,548 - DEBUG - close.started
2024-12-17 18:44:38,550 - DEBUG - close.complete
2024-12-17 18:44:38,551 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:44:38,631 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BD1CF10>
2024-12-17 18:44:38,633 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001878BAB4FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:44:38,722 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001878BD1DB40>
2024-12-17 18:44:38,723 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:44:38,726 - DEBUG - send_request_headers.complete
2024-12-17 18:44:38,726 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:44:38,727 - DEBUG - send_request_body.complete
2024-12-17 18:44:38,728 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:44:39,560 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:44:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37595ca9b63e62-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'29888'), (b'x-ratelimit-reset-requests', b'16.413s'), (b'x-ratelimit-reset-tokens', b'224ms'), (b'x-request-id', b'req_01jfadt61xednt23czbvgx5pe8'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:44:39,565 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:44:39,566 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:44:39,568 - DEBUG - receive_response_body.complete
2024-12-17 18:44:39,569 - DEBUG - response_closed.started
2024-12-17 18:44:39,570 - DEBUG - response_closed.complete
2024-12-17 18:44:39,571 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:44:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37595ca9b63e62-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '29888', 'x-ratelimit-reset-requests': '16.413s', 'x-ratelimit-reset-tokens': '224ms', 'x-request-id': 'req_01jfadt61xednt23czbvgx5pe8', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:44:39,578 - DEBUG - Raw Groq response: 'Here is the parsed JSON:\n\n{\n    "cuisine": "Desi",\n    "location": "Clifton",\n    "language": "English"\n}'
2024-12-17 18:44:39,582 - DEBUG - JSON extraction attempt failed: Expecting value: line 1 column 1 (char 0)
2024-12-17 18:44:39,583 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:44:39,585 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:44:39,590 - DEBUG - Query params: ('%Desi%', 'Desi', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:44:39,594 - INFO - 127.0.0.1 - - [17/Dec/2024 18:44:39] "POST /search HTTP/1.1" 200 -
2024-12-17 18:45:18,005 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:45:18,008 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:45:19,725 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:45:26,121 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:45:26,126 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:45:26,729 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:45:26,733 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:45:27,936 - WARNING -  * Debugger is active!
2024-12-17 18:45:27,956 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:45:31,253 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:45:31,269 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:45:31,366 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:45:31,367 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:45:31,462 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D6240144F0>
2024-12-17 18:45:31,464 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D623E24FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:45:31,554 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D6240144C0>
2024-12-17 18:45:31,557 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:45:31,560 - DEBUG - send_request_headers.complete
2024-12-17 18:45:31,561 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:45:31,562 - DEBUG - send_request_body.complete
2024-12-17 18:45:31,563 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:45:32,934 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:45:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f375aa6dbe6797d-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5888'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.12s'), (b'x-request-id', b'req_01jfadvs5ze62tc3smeddet697'), (b'Set-Cookie', b'__cf_bm=mj2P7dm1ISfCN3KLru_wP3gBgPfOxKPrrY1VXH3qKas-1734443133-1.0.1.1-bBQNALT_9I7ejL_cxaqyPv2q5rVsaO6p07knwFyOWaAZoyoFdMx.dU8MAyrLs9lEJTHZHdu0MyaASjKarLP1bg; path=/; expires=Tue, 17-Dec-24 14:15:33 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:45:32,938 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:45:32,939 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:45:32,942 - DEBUG - receive_response_body.complete
2024-12-17 18:45:32,946 - DEBUG - response_closed.started
2024-12-17 18:45:32,947 - DEBUG - response_closed.complete
2024-12-17 18:45:32,949 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:45:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f375aa6dbe6797d-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5888', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.12s', 'x-request-id': 'req_01jfadvs5ze62tc3smeddet697', 'set-cookie': '__cf_bm=mj2P7dm1ISfCN3KLru_wP3gBgPfOxKPrrY1VXH3qKas-1734443133-1.0.1.1-bBQNALT_9I7ejL_cxaqyPv2q5rVsaO6p07knwFyOWaAZoyoFdMx.dU8MAyrLs9lEJTHZHdu0MyaASjKarLP1bg; path=/; expires=Tue, 17-Dec-24 14:15:33 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:45:32,998 - DEBUG - Raw Groq response: '```json\n{\n    "cuisine": "Indian/Pakistani",\n    "location": "Clifton",\n    "language": "English"\n}\n```'
2024-12-17 18:45:33,001 - INFO - Parsed Query: {'cuisine': 'Indian/Pakistani', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:45:33,004 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:45:33,006 - DEBUG - Query params: ('%Indian/Pakistani%', 'Indian/Pakistani', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:45:33,029 - INFO - 127.0.0.1 - - [17/Dec/2024 18:45:33] "POST /search HTTP/1.1" 200 -
2024-12-17 18:45:54,428 - DEBUG - Sending prompt to Groq: 
    Parse this Desi restaurant search query precisely:

    Query: "biryani restaurants near me in clifton"

    Return ONLY a valid JSON with these keys:
    {
        "cuisine": "Type of cuisine",
        "location": "City or Area",
        "language": "Detected Language Script"
    }

    IMPORTANT: 
    - Use NULL if no specific location/cuisine found
    - Be concise and precise
    - No extra text or explanations
    
2024-12-17 18:45:54,437 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Parse this Desi restaurant search query precisely:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Return ONLY a valid JSON with these keys:\n    {\n        "cuisine": "Type of cuisine",\n        "location": "City or Area",\n        "language": "Detected Language Script"\n    }\n\n    IMPORTANT: \n    - Use NULL if no specific location/cuisine found\n    - Be concise and precise\n    - No extra text or explanations\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:45:54,444 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:45:54,447 - DEBUG - close.started
2024-12-17 18:45:54,454 - DEBUG - close.complete
2024-12-17 18:45:54,460 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:45:54,584 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D624017BB0>
2024-12-17 18:45:54,585 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D623E24FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:45:54,674 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D624017BE0>
2024-12-17 18:45:54,675 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:45:54,676 - DEBUG - send_request_headers.complete
2024-12-17 18:45:54,677 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:45:54,678 - DEBUG - send_request_body.complete
2024-12-17 18:45:54,679 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:45:55,126 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:45:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f375b375a715f72-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5888'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.12s'), (b'x-request-id', b'req_01jfadwfrree1rnsccg6mzajzn'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:45:55,131 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:45:55,133 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:45:55,136 - DEBUG - receive_response_body.complete
2024-12-17 18:45:55,137 - DEBUG - response_closed.started
2024-12-17 18:45:55,139 - DEBUG - response_closed.complete
2024-12-17 18:45:55,140 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:45:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f375b375a715f72-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5888', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.12s', 'x-request-id': 'req_01jfadwfrree1rnsccg6mzajzn', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:45:55,147 - DEBUG - Raw Groq response: '```json\n{\n    "cuisine": "Indian/Pakistani",\n    "location": "Clifton",\n    "language": "English"\n}\n```'
2024-12-17 18:45:55,149 - INFO - Parsed Query: {'cuisine': 'Indian/Pakistani', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:45:55,152 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating 
            FROM restaurants 
            WHERE (cuisine LIKE ? OR ? = '')
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:45:55,156 - DEBUG - Query params: ('%Indian/Pakistani%', 'Indian/Pakistani', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:45:55,159 - INFO - 127.0.0.1 - - [17/Dec/2024 18:45:55] "POST /search HTTP/1.1" 200 -
2024-12-17 18:47:12,301 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:47:12,308 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:47:12,392 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:47:13,912 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:47:49,036 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:47:49,038 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:47:49,605 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:47:49,608 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:47:50,268 - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.100.118:5000
2024-12-17 18:47:50,270 - INFO - [33mPress CTRL+C to quit[0m
2024-12-17 18:47:50,303 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:47:58,509 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:47:58,521 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:47:59,305 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:47:59,307 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:48:00,357 - WARNING -  * Debugger is active!
2024-12-17 18:48:00,381 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:48:00,459 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani restaurants near me in clifton"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 18:48:00,477 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:48:00,578 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:48:00,579 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:48:00,683 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A456A8520>
2024-12-17 18:48:00,685 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A454B8FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:48:00,792 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A456A84F0>
2024-12-17 18:48:00,793 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:48:00,794 - DEBUG - send_request_headers.complete
2024-12-17 18:48:00,795 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:48:00,796 - DEBUG - send_request_body.complete
2024-12-17 18:48:00,797 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:48:02,720 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:48:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f375e4bafa55fc9-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5851'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.49s'), (b'x-request-id', b'req_01jfae0ayke7m8f3weym7dwbzm'), (b'Set-Cookie', b'__cf_bm=SjlCF3PsOjhBSr3SM3qUo1Sw9.ztwcd.kvX_oTeiUpE-1734443283-1.0.1.1-w7t1vUgf6GnMB1toBBnT8KOYvqisGjow.y0fwgusMj3Kp6ewEytX1CFQ241uE2571dIjkStqA.hGus45bVmzHQ; path=/; expires=Tue, 17-Dec-24 14:18:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:48:02,725 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:48:02,726 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:48:02,728 - DEBUG - receive_response_body.complete
2024-12-17 18:48:02,730 - DEBUG - response_closed.started
2024-12-17 18:48:02,731 - DEBUG - response_closed.complete
2024-12-17 18:48:02,733 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:48:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f375e4bafa55fc9-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5851', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.49s', 'x-request-id': 'req_01jfae0ayke7m8f3weym7dwbzm', 'set-cookie': '__cf_bm=SjlCF3PsOjhBSr3SM3qUo1Sw9.ztwcd.kvX_oTeiUpE-1734443283-1.0.1.1-w7t1vUgf6GnMB1toBBnT8KOYvqisGjow.y0fwgusMj3Kp6ewEytX1CFQ241uE2571dIjkStqA.hGus45bVmzHQ; path=/; expires=Tue, 17-Dec-24 14:18:03 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:48:02,777 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clifton",\n        "language": "English"\n}\n```'
2024-12-17 18:48:02,782 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:48:02,784 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:48:02,787 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:48:02,792 - ERROR - Database connection error: no such column: description
2024-12-17 18:48:02,795 - ERROR - Database query error: no such column: description
2024-12-17 18:48:02,800 - INFO - 127.0.0.1 - - [17/Dec/2024 18:48:02] "[35m[1mPOST /search HTTP/1.1[0m" 500 -
2024-12-17 18:48:52,212 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:48:52,216 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:48:52,221 - INFO -  * Detected change in 'c:\\Users\\as\\AWS_RAG\\backend\\d.py', reloading
2024-12-17 18:48:53,673 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:49:04,262 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:04,265 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:04,887 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:04,890 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:05,622 - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.100.118:5000
2024-12-17 18:49:05,625 - INFO - [33mPress CTRL+C to quit[0m
2024-12-17 18:49:05,658 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:49:10,661 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:10,664 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:11,254 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:11,256 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:11,908 - WARNING -  * Debugger is active!
2024-12-17 18:49:11,927 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:49:48,753 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:48,758 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:49,341 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:49,343 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:50,010 - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.100.118:5000
2024-12-17 18:49:50,012 - INFO - [33mPress CTRL+C to quit[0m
2024-12-17 18:49:50,045 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:49:54,807 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:54,810 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:55,378 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:49:55,380 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:49:55,998 - WARNING -  * Debugger is active!
2024-12-17 18:49:56,015 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 18:50:24,811 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani restaurants near me in clifton"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 18:50:24,825 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani restaurants near me in clifton"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:50:24,925 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:50:24,926 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:50:25,022 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E5FC460>
2024-12-17 18:50:25,023 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A7E408FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:50:25,111 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E5FC430>
2024-12-17 18:50:25,112 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:50:25,114 - DEBUG - send_request_headers.complete
2024-12-17 18:50:25,114 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:50:25,115 - DEBUG - send_request_body.complete
2024-12-17 18:50:25,116 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:50:25,561 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:50:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3761d198cf5f71-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5851'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.49s'), (b'x-request-id', b'req_01jfae4qvvek28df671afvt0y4'), (b'Set-Cookie', b'__cf_bm=udjkIfGHWMMv_1.ypcJQh_4_M0mMCkGKDA8kZ7jA0nQ-1734443425-1.0.1.1-kexDRvZ9W.oAxANUV6dn5hjlMQwVPUDJw5fKN3goy0ROJD.v.XS1MKbimbUEatc_E6lj5tUQDh3zG72pLR1WIA; path=/; expires=Tue, 17-Dec-24 14:20:25 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:50:25,566 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:50:25,567 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:50:25,569 - DEBUG - receive_response_body.complete
2024-12-17 18:50:25,571 - DEBUG - response_closed.started
2024-12-17 18:50:25,572 - DEBUG - response_closed.complete
2024-12-17 18:50:25,573 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:50:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3761d198cf5f71-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5851', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.49s', 'x-request-id': 'req_01jfae4qvvek28df671afvt0y4', 'set-cookie': '__cf_bm=udjkIfGHWMMv_1.ypcJQh_4_M0mMCkGKDA8kZ7jA0nQ-1734443425-1.0.1.1-kexDRvZ9W.oAxANUV6dn5hjlMQwVPUDJw5fKN3goy0ROJD.v.XS1MKbimbUEatc_E6lj5tUQDh3zG72pLR1WIA; path=/; expires=Tue, 17-Dec-24 14:20:25 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:50:25,637 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clifton",\n        "language": "English"\n}\n```'
2024-12-17 18:50:25,639 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clifton', 'language': 'English'}
2024-12-17 18:50:25,686 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:50:25,722 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:50:25,999 - INFO - 127.0.0.1 - - [17/Dec/2024 18:50:25] "POST /search HTTP/1.1" 200 -
2024-12-17 18:50:53,073 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clifton main"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 18:50:53,083 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clifton main"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:50:53,088 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:50:53,090 - DEBUG - close.started
2024-12-17 18:50:53,094 - DEBUG - close.complete
2024-12-17 18:50:53,095 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:50:53,178 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E5FEA10>
2024-12-17 18:50:53,180 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A7E408FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:50:53,270 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E5FEBC0>
2024-12-17 18:50:53,271 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:50:53,273 - DEBUG - send_request_headers.complete
2024-12-17 18:50:53,275 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:50:53,278 - DEBUG - send_request_body.complete
2024-12-17 18:50:53,280 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:50:53,716 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:50:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3762819da43d83-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5852'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.48s'), (b'x-request-id', b'req_01jfae5kbke8hs1t51bzw21f2s'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:50:53,718 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:50:53,719 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:50:53,720 - DEBUG - receive_response_body.complete
2024-12-17 18:50:53,721 - DEBUG - response_closed.started
2024-12-17 18:50:53,722 - DEBUG - response_closed.complete
2024-12-17 18:50:53,722 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:50:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3762819da43d83-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5852', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.48s', 'x-request-id': 'req_01jfae5kbke8hs1t51bzw21f2s', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:50:53,728 - DEBUG - Raw Groq response: '```\n{\n    "cuisine": "Biryani",\n    "location": "Clifton",\n    "language": "Urdu"\n}\n```'
2024-12-17 18:50:53,731 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clifton', 'language': 'Urdu'}
2024-12-17 18:50:53,733 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:50:53,735 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clifton%', '%Clifton%', 'Clifton')
2024-12-17 18:50:53,737 - INFO - 127.0.0.1 - - [17/Dec/2024 18:50:53] "POST /search HTTP/1.1" 200 -
2024-12-17 18:51:00,422 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 18:51:00,430 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 18:51:00,434 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 18:51:00,435 - DEBUG - close.started
2024-12-17 18:51:00,437 - DEBUG - close.complete
2024-12-17 18:51:00,438 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 18:51:00,520 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E671720>
2024-12-17 18:51:00,521 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022A7E408FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 18:51:00,616 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022A7E6716F0>
2024-12-17 18:51:00,617 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 18:51:00,618 - DEBUG - send_request_headers.complete
2024-12-17 18:51:00,619 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 18:51:00,621 - DEBUG - send_request_body.complete
2024-12-17 18:51:00,621 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 18:51:01,076 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 13:51:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3762af8a185f7e-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5852'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.48s'), (b'x-request-id', b'req_01jfae5thmeqctzptfm4a3rn62'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 18:51:01,078 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 18:51:01,080 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 18:51:01,081 - DEBUG - receive_response_body.complete
2024-12-17 18:51:01,083 - DEBUG - response_closed.started
2024-12-17 18:51:01,084 - DEBUG - response_closed.complete
2024-12-17 18:51:01,085 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 13:51:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3762af8a185f7e-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5852', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.48s', 'x-request-id': 'req_01jfae5thmeqctzptfm4a3rn62', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 18:51:01,095 - DEBUG - Raw Groq response: '```\n{\n    "cuisine": "Biryani",\n    "location": "Clift",\n    "language": "Urdu"\n}\n```'
2024-12-17 18:51:01,097 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 18:51:01,099 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 18:51:01,102 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 18:51:01,105 - INFO - 127.0.0.1 - - [17/Dec/2024 18:51:01] "POST /search HTTP/1.1" 200 -
2024-12-17 18:51:30,054 - INFO -  * Detected change in 'C:\\Users\\as\\anaconda3\\envs\\RAG\\Lib\\sqlite3\\__init__.py', reloading
2024-12-17 18:51:31,408 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 18:51:37,301 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:51:37,303 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:51:37,940 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 18:51:37,944 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 18:51:38,652 - WARNING -  * Debugger is active!
2024-12-17 18:51:38,670 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 19:06:23,051 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:06:23,074 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:06:23,282 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:06:23,285 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:06:23,383 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7E99150>
2024-12-17 19:06:23,386 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000235B7D04FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:06:23,525 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7E99180>
2024-12-17 19:06:23,527 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:06:23,530 - DEBUG - send_request_headers.complete
2024-12-17 19:06:23,531 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:06:23,534 - DEBUG - send_request_body.complete
2024-12-17 19:06:23,535 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:06:23,976 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:06:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f377937ec0f44b2-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5852'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.48s'), (b'x-request-id', b'req_01jfaf1zv2f3qa3stv9aqz49xc'), (b'Set-Cookie', b'__cf_bm=h1bcrDsX3zA27JslpHdb.bUcpkvnSi.gcBHTIdPQTEw-1734444384-1.0.1.1-ZOglOk3cCgFG4hSBkldomJPg9wRMtroJOAfTAozFJrjX0DtMdmO1FHG80.Sj2KOCelELs8QgK8ZW8CYj5yjRFw; path=/; expires=Tue, 17-Dec-24 14:36:24 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:06:23,980 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:06:23,983 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:06:23,987 - DEBUG - receive_response_body.complete
2024-12-17 19:06:23,989 - DEBUG - response_closed.started
2024-12-17 19:06:23,990 - DEBUG - response_closed.complete
2024-12-17 19:06:23,991 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:06:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f377937ec0f44b2-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5852', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.48s', 'x-request-id': 'req_01jfaf1zv2f3qa3stv9aqz49xc', 'set-cookie': '__cf_bm=h1bcrDsX3zA27JslpHdb.bUcpkvnSi.gcBHTIdPQTEw-1734444384-1.0.1.1-ZOglOk3cCgFG4hSBkldomJPg9wRMtroJOAfTAozFJrjX0DtMdmO1FHG80.Sj2KOCelELs8QgK8ZW8CYj5yjRFw; path=/; expires=Tue, 17-Dec-24 14:36:24 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:06:24,034 - DEBUG - Raw Groq response: '```\n{\n    "cuisine": "Biryani",\n    "location": "Clift",\n    "language": "Urdu"\n}\n```'
2024-12-17 19:06:24,043 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:06:24,065 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:06:24,074 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:06:24,111 - INFO - 127.0.0.1 - - [17/Dec/2024 19:06:24] "POST /search HTTP/1.1" 200 -
2024-12-17 19:06:45,935 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se ziada ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:06:46,021 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se ziada ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:06:46,070 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:06:46,087 - DEBUG - close.started
2024-12-17 19:06:46,094 - DEBUG - close.complete
2024-12-17 19:06:46,098 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:06:46,183 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7E99360>
2024-12-17 19:06:46,184 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000235B7D04FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:06:46,273 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7E991E0>
2024-12-17 19:06:46,275 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:06:46,277 - DEBUG - send_request_headers.complete
2024-12-17 19:06:46,279 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:06:46,281 - DEBUG - send_request_body.complete
2024-12-17 19:06:46,282 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:06:46,728 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:06:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3779c618985f96-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5845'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.55s'), (b'x-request-id', b'req_01jfaf2p29esmtyc9sexj8hzt6'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:06:46,732 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:06:46,733 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:06:46,734 - DEBUG - receive_response_body.complete
2024-12-17 19:06:46,734 - DEBUG - response_closed.started
2024-12-17 19:06:46,735 - DEBUG - response_closed.complete
2024-12-17 19:06:46,736 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:06:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3779c618985f96-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5845', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.55s', 'x-request-id': 'req_01jfaf2p29esmtyc9sexj8hzt6', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:06:46,740 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:06:46,741 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:06:46,744 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:06:46,750 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:06:46,752 - INFO - 127.0.0.1 - - [17/Dec/2024 19:06:46] "POST /search HTTP/1.1" 200 -
2024-12-17 19:08:23,028 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:08:23,037 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:08:23,044 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:08:23,046 - DEBUG - close.started
2024-12-17 19:08:23,048 - DEBUG - close.complete
2024-12-17 19:08:23,050 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:08:23,132 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7E76080>
2024-12-17 19:08:23,135 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000235B7D04FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:08:23,226 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7CA4D60>
2024-12-17 19:08:23,228 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:08:23,230 - DEBUG - send_request_headers.complete
2024-12-17 19:08:23,231 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:08:23,232 - DEBUG - send_request_body.complete
2024-12-17 19:08:23,233 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:08:23,688 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:08:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f377c240d205fc3-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfaf5mraeg9bkh61gp4k26yv'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:08:23,691 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:08:23,693 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:08:23,695 - DEBUG - receive_response_body.complete
2024-12-17 19:08:23,695 - DEBUG - response_closed.started
2024-12-17 19:08:23,695 - DEBUG - response_closed.complete
2024-12-17 19:08:23,700 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:08:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f377c240d205fc3-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfaf5mraeg9bkh61gp4k26yv', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:08:23,705 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:08:23,708 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:08:23,713 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:08:23,717 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:08:23,721 - INFO - 127.0.0.1 - - [17/Dec/2024 19:08:23] "POST /search HTTP/1.1" 200 -
2024-12-17 19:08:32,463 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:08:32,471 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:08:32,477 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:08:32,479 - DEBUG - close.started
2024-12-17 19:08:32,480 - DEBUG - close.complete
2024-12-17 19:08:32,481 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:08:32,561 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7F79D20>
2024-12-17 19:08:32,562 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x00000235B7D04FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:08:32,651 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000235B7F79D50>
2024-12-17 19:08:32,652 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:08:32,653 - DEBUG - send_request_headers.complete
2024-12-17 19:08:32,654 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:08:32,656 - DEBUG - send_request_body.complete
2024-12-17 19:08:32,656 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:08:33,510 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:08:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f377c5eee6e44c6-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfaf5xy8eynsq4qtmyab8jg4'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:08:33,515 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:08:33,516 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:08:33,517 - DEBUG - receive_response_body.complete
2024-12-17 19:08:33,518 - DEBUG - response_closed.started
2024-12-17 19:08:33,520 - DEBUG - response_closed.complete
2024-12-17 19:08:33,521 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:08:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f377c5eee6e44c6-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfaf5xy8eynsq4qtmyab8jg4', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:08:33,526 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:08:33,527 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:08:33,530 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:08:33,533 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:08:33,535 - INFO - 127.0.0.1 - - [17/Dec/2024 19:08:33] "POST /search HTTP/1.1" 200 -
2024-12-17 19:18:53,409 - INFO -  * Detected change in 'C:\\Users\\as\\anaconda3\\envs\\RAG\\Lib\\os.py', reloading
2024-12-17 19:18:54,731 - INFO -  * Restarting with watchdog (windowsapi)
2024-12-17 19:19:00,893 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 19:19:00,895 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 19:19:01,576 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-12-17 19:19:01,578 - DEBUG - load_verify_locations cafile='C:\\Users\\as\\anaconda3\\envs\\RAG\\Library\\ssl\\cacert.pem'
2024-12-17 19:19:02,383 - WARNING -  * Debugger is active!
2024-12-17 19:19:02,403 - INFO -  * Debugger PIN: 145-573-611
2024-12-17 19:19:18,381 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 3 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:19:18,466 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 3 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:19:18,693 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:19:18,696 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:19:19,039 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863482E0>
2024-12-17 19:19:19,040 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:19:19,131 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863483A0>
2024-12-17 19:19:19,132 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:19:19,134 - DEBUG - send_request_headers.complete
2024-12-17 19:19:19,135 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:19:19,136 - DEBUG - send_request_body.complete
2024-12-17 19:19:19,140 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:19:19,584 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:19:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f378c2799143df0-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfafsn9jen0s6fr3zgsvjt68'), (b'Set-Cookie', b'__cf_bm=SxltH_PKjyO8keUQE5wBoQ_GqLDoCp8_5Kigp4CBTi4-1734445159-1.0.1.1-35w4pW49otOsIZZVYWiRW1UMsPKgbRbfdWSpCd9VweEq4mbSbNRFGgUSgrC1mA1Vm39K1rb.5kDgpZUVTDTKnA; path=/; expires=Tue, 17-Dec-24 14:49:19 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:19:19,590 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:19:19,591 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:19:19,593 - DEBUG - receive_response_body.complete
2024-12-17 19:19:19,594 - DEBUG - response_closed.started
2024-12-17 19:19:19,595 - DEBUG - response_closed.complete
2024-12-17 19:19:19,596 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:19:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f378c2799143df0-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfafsn9jen0s6fr3zgsvjt68', 'set-cookie': '__cf_bm=SxltH_PKjyO8keUQE5wBoQ_GqLDoCp8_5Kigp4CBTi4-1734445159-1.0.1.1-35w4pW49otOsIZZVYWiRW1UMsPKgbRbfdWSpCd9VweEq4mbSbNRFGgUSgrC1mA1Vm39K1rb.5kDgpZUVTDTKnA; path=/; expires=Tue, 17-Dec-24 14:49:19 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:19:19,665 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:19:19,667 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:19:19,669 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:19:19,675 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:19:19,680 - INFO - 127.0.0.1 - - [17/Dec/2024 19:19:19] "POST /search HTTP/1.1" 200 -
2024-12-17 19:28:03,351 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:28:03,370 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:28:03,386 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:28:03,393 - DEBUG - close.started
2024-12-17 19:28:03,396 - DEBUG - close.complete
2024-12-17 19:28:03,407 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:28:03,503 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F28634AD10>
2024-12-17 19:28:03,504 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:28:03,593 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F28634A4A0>
2024-12-17 19:28:03,594 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:28:03,596 - DEBUG - send_request_headers.complete
2024-12-17 19:28:03,598 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:28:03,599 - DEBUG - send_request_body.complete
2024-12-17 19:28:03,601 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:28:04,089 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:28:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f3798f58fa83d98-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfag9nfefcfstar6zsseyav1'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:28:04,091 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:28:04,092 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:28:04,094 - DEBUG - receive_response_body.complete
2024-12-17 19:28:04,095 - DEBUG - response_closed.started
2024-12-17 19:28:04,096 - DEBUG - response_closed.complete
2024-12-17 19:28:04,097 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:28:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f3798f58fa83d98-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfag9nfefcfstar6zsseyav1', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:28:04,101 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:28:04,103 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:28:04,108 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:28:04,111 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:28:04,115 - INFO - 127.0.0.1 - - [17/Dec/2024 19:28:04] "POST /search HTTP/1.1" 200 -
2024-12-17 19:30:10,052 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:30:10,061 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:30:10,065 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:30:10,067 - DEBUG - close.started
2024-12-17 19:30:10,068 - DEBUG - close.complete
2024-12-17 19:30:10,069 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:30:10,290 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F28634B730>
2024-12-17 19:30:10,292 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:30:10,382 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F28634B700>
2024-12-17 19:30:10,384 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:30:10,385 - DEBUG - send_request_headers.complete
2024-12-17 19:30:10,386 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:30:10,388 - DEBUG - send_request_body.complete
2024-12-17 19:30:10,393 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:30:11,063 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:30:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f379c0dfbf83d87-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfagdhajezjrftg8hpge51wq'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:30:11,065 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:30:11,067 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:30:11,068 - DEBUG - receive_response_body.complete
2024-12-17 19:30:11,069 - DEBUG - response_closed.started
2024-12-17 19:30:11,070 - DEBUG - response_closed.complete
2024-12-17 19:30:11,071 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:30:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f379c0dfbf83d87-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfagdhajezjrftg8hpge51wq', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:30:11,075 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:30:11,077 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:30:11,079 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:30:11,083 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:30:11,086 - INFO - 127.0.0.1 - - [17/Dec/2024 19:30:11] "POST /search HTTP/1.1" 200 -
2024-12-17 19:31:13,563 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:31:13,584 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:31:13,599 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:31:13,601 - DEBUG - close.started
2024-12-17 19:31:13,603 - DEBUG - close.complete
2024-12-17 19:31:13,604 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:31:13,685 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C0D90>
2024-12-17 19:31:13,686 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:31:13,778 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C0E20>
2024-12-17 19:31:13,780 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:31:13,782 - DEBUG - send_request_headers.complete
2024-12-17 19:31:13,783 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:31:13,785 - DEBUG - send_request_body.complete
2024-12-17 19:31:13,786 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:31:14,228 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:31:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f379d9a3ca13d95-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfagff6zf838x9112y06sgqs'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:31:14,231 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:31:14,233 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:31:14,234 - DEBUG - receive_response_body.complete
2024-12-17 19:31:14,235 - DEBUG - response_closed.started
2024-12-17 19:31:14,235 - DEBUG - response_closed.complete
2024-12-17 19:31:14,237 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:31:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f379d9a3ca13d95-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfagff6zf838x9112y06sgqs', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:31:14,241 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:31:14,245 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:31:14,247 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:31:14,249 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:31:14,253 - INFO - 127.0.0.1 - - [17/Dec/2024 19:31:14] "POST /search HTTP/1.1" 200 -
2024-12-17 19:33:12,064 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:33:12,073 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "biryani ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:33:12,077 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:33:12,082 - DEBUG - close.started
2024-12-17 19:33:12,084 - DEBUG - close.complete
2024-12-17 19:33:12,085 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:33:12,169 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C2320>
2024-12-17 19:33:12,169 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:33:12,262 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C22F0>
2024-12-17 19:33:12,263 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:33:12,266 - DEBUG - send_request_headers.complete
2024-12-17 19:33:12,268 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:33:12,269 - DEBUG - send_request_body.complete
2024-12-17 19:33:12,270 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:33:12,922 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:33:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37a07ecb78f87d-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfagk2xpf86ren7fwqjgyvcq'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:33:12,924 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:33:12,925 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:33:12,926 - DEBUG - receive_response_body.complete
2024-12-17 19:33:12,927 - DEBUG - response_closed.started
2024-12-17 19:33:12,927 - DEBUG - response_closed.complete
2024-12-17 19:33:12,928 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:33:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37a07ecb78f87d-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfagk2xpf86ren7fwqjgyvcq', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:33:12,933 - DEBUG - Raw Groq response: '```\n{\n        "cuisine": "Biryani",\n        "location": "Clift",\n        "language": "Urdu"\n}\n```'
2024-12-17 19:33:12,934 - INFO - Parsed Query: {'cuisine': 'Biryani', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:33:12,937 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:33:12,941 - DEBUG - Query params: ('Biryani', '%Biryani%', 'Biryani', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:33:12,943 - INFO - 127.0.0.1 - - [17/Dec/2024 19:33:12] "POST /search HTTP/1.1" 200 -
2024-12-17 19:33:26,764 - DEBUG - Sending prompt to Groq: 
    Precisely extract key details from this restaurant search query:

    Query: "khaanay ki achi jagah clift main jis ki rating 4 se kam ho"

    Guidelines for JSON response:
    - Identify SPECIFIC cuisine type
    - Extract EXACT location
    - Detect query language

    Important Cuisine Mapping:
    - "Indian/Pakistani" -> Use "Desi"
    - "Biryani" keywords -> Use "Biryani"
    - Generic terms -> Use "Desi"

    Respond ONLY with this JSON format:
    {
        "cuisine": "Mapped Cuisine Type",
        "location": "Specific Location",
        "language": "Detected Language"
    }
    
2024-12-17 19:33:26,786 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\n    Precisely extract key details from this restaurant search query:\n\n    Query: "khaanay ki achi jagah clift main jis ki rating 4 se kam ho"\n\n    Guidelines for JSON response:\n    - Identify SPECIFIC cuisine type\n    - Extract EXACT location\n    - Detect query language\n\n    Important Cuisine Mapping:\n    - "Indian/Pakistani" -> Use "Desi"\n    - "Biryani" keywords -> Use "Biryani"\n    - Generic terms -> Use "Desi"\n\n    Respond ONLY with this JSON format:\n    {\n        "cuisine": "Mapped Cuisine Type",\n        "location": "Specific Location",\n        "language": "Detected Language"\n    }\n    '}], 'model': 'llama-3.3-70b-versatile', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.2}}
2024-12-17 19:33:26,799 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-12-17 19:33:26,801 - DEBUG - close.started
2024-12-17 19:33:26,803 - DEBUG - close.complete
2024-12-17 19:33:26,810 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-12-17 19:33:26,897 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C3E50>
2024-12-17 19:33:26,899 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F286154FC0> server_hostname='api.groq.com' timeout=None
2024-12-17 19:33:26,989 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2863C2BF0>
2024-12-17 19:33:26,991 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-12-17 19:33:26,995 - DEBUG - send_request_headers.complete
2024-12-17 19:33:26,997 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-12-17 19:33:26,998 - DEBUG - send_request_body.complete
2024-12-17 19:33:26,999 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-12-17 19:33:28,335 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 17 Dec 2024 14:33:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'CF-Ray', b'8f37a0dadefd44b7-SIN'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'Vary', b'Origin, Accept-Encoding'), (b'Via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'x-groq-inference-region', b'us-west-1'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5846'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.54s'), (b'x-request-id', b'req_01jfagkhadf0kvd02n0wtpedjz'), (b'Server', b'cloudflare'), (b'Content-Encoding', b'gzip')])
2024-12-17 19:33:28,337 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-12-17 19:33:28,338 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-12-17 19:33:28,339 - DEBUG - receive_response_body.complete
2024-12-17 19:33:28,340 - DEBUG - response_closed.started
2024-12-17 19:33:28,340 - DEBUG - response_closed.complete
2024-12-17 19:33:28,341 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 17 Dec 2024 14:33:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cf-ray': '8f37a0dadefd44b7-SIN', 'cf-cache-status': 'DYNAMIC', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin, Accept-Encoding', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'x-groq-inference-region': 'us-west-1', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5846', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.54s', 'x-request-id': 'req_01jfagkhadf0kvd02n0wtpedjz', 'server': 'cloudflare', 'content-encoding': 'gzip'})
2024-12-17 19:33:28,345 - DEBUG - Raw Groq response: '```\n{\n    "cuisine": "Desi",\n    "location": "Clift",\n    "language": "Urdu"\n}\n```'
2024-12-17 19:33:28,348 - INFO - Parsed Query: {'cuisine': 'Desi', 'location': 'Clift', 'language': 'Urdu'}
2024-12-17 19:33:28,350 - DEBUG - Executing query: 
            SELECT name, location, neighborhood, address, rating, cuisine, description 
            FROM restaurants 
            WHERE (
                (? = '' OR cuisine LIKE ?) 
                OR 
                (? = 'Desi' AND (cuisine = 'Desi' OR cuisine = 'Biryani'))
            )
            AND (location LIKE ? OR neighborhood LIKE ? OR ? = '')
            ORDER BY rating DESC 
            LIMIT 10;
        
2024-12-17 19:33:28,354 - DEBUG - Query params: ('Desi', '%Desi%', 'Desi', '%Clift%', '%Clift%', 'Clift')
2024-12-17 19:33:28,356 - INFO - 127.0.0.1 - - [17/Dec/2024 19:33:28] "POST /search HTTP/1.1" 200 -
